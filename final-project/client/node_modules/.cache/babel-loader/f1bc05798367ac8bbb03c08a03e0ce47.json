{"ast":null,"code":"var _jsxFileName = \"/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/components/Analytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Sidebar from './Sidebar';\nimport { useDataLayerValue } from '../../src/DataLayer';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Chart } from 'react-chartjs-2';\n/*\nHomepage: consists of sidebar, favorite artists, and favorite tracks. \nBody component contains favorite artist and favorite tracks.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Analytics() {\n  _s();\n\n  var _user_playlists$items, _user_playlists$items2;\n\n  // access user playlist from the data layer\n  const [{\n    user_playlists,\n    top_track\n  }, dispatch] = useDataLayerValue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: user_playlists === null || user_playlists === void 0 ? void 0 : (_user_playlists$items = user_playlists.items) === null || _user_playlists$items === void 0 ? void 0 : _user_playlists$items.map(playlist => playlist.name),\n        datasets: [{\n          label: 'Number of tracks gsdfgdf your playlists',\n          backgroundColor: 'rgba(75,3,1,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: user_playlists === null || user_playlists === void 0 ? void 0 : (_user_playlists$items2 = user_playlists.items) === null || _user_playlists$items2 === void 0 ? void 0 : _user_playlists$items2.map(playlist => playlist.tracks.total)\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Number of tracks in gsfgd playlists',\n          fontSize: 30\n        },\n        legend: {\n          display: false\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analytics, \"FAT/QTKWYgd0xlD2lsf9wB9vQQ0=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Analytics;\nexport default Analytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"sources":["/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/components/Analytics.js"],"names":["React","useState","Bar","Sidebar","useDataLayerValue","Chart","ChartJS","Analytics","user_playlists","top_track","dispatch","labels","items","map","playlist","name","datasets","label","backgroundColor","borderColor","borderWidth","data","tracks","total","title","display","text","fontSize","legend"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,KAAK,IAAIC,OAAlB,QAAiC,eAAjC;AACA,SAASD,KAAT,QAAiC,iBAAjC;AAEA;AACA;AACA;AACA;;;;AAEA,SAASE,SAAT,GAAqB;AAAA;;AAAA;;AAEjB;AACA,QAAM,CAAC;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,GAAD,EAAgCC,QAAhC,IAA4CN,iBAAiB,EAAnE;AAGA,sBAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AACI,MAAA,IAAI,EAAE;AACFO,QAAAA,MAAM,EAAEH,cAAF,aAAEA,cAAF,gDAAEA,cAAc,CAAEI,KAAlB,0DAAE,sBAAuBC,GAAvB,CAA4BC,QAAD,IAAeA,QAAQ,CAACC,IAAnD,CADN;AAEFC,QAAAA,QAAQ,EAAE,CACV;AACIC,UAAAA,KAAK,EAAE,yCADX;AAEIC,UAAAA,eAAe,EAAE,gBAFrB;AAGIC,UAAAA,WAAW,EAAE,eAHjB;AAIIC,UAAAA,WAAW,EAAE,CAJjB;AAKIC,UAAAA,IAAI,EAAEb,cAAF,aAAEA,cAAF,iDAAEA,cAAc,CAAEI,KAAlB,2DAAE,uBAAuBC,GAAvB,CAA4BC,QAAD,IAAeA,QAAQ,CAACQ,MAAT,CAAgBC,KAA1D;AALV,SADU;AAFR,OADV;AAaI,MAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAC;AACNC,UAAAA,OAAO,EAAC,IADF;AAENC,UAAAA,IAAI,EAAC,qCAFC;AAGNC,UAAAA,QAAQ,EAAE;AAHJ,SADD;AAMLC,QAAAA,MAAM,EAAC;AACPH,UAAAA,OAAO,EAAC;AADD;AANF;AAbb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgCH;;GAtCQlB,S;UAG6CH,iB;;;KAH7CG,S;AAwCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport Sidebar from './Sidebar'\nimport { useDataLayerValue } from '../../src/DataLayer'\nimport { Chart as ChartJS } from 'chart.js/auto'\nimport { Chart }            from 'react-chartjs-2'\n\n/*\nHomepage: consists of sidebar, favorite artists, and favorite tracks. \nBody component contains favorite artist and favorite tracks.\n*/\n\nfunction Analytics() {\n\n    // access user playlist from the data layer\n    const [{ user_playlists, top_track }, dispatch] = useDataLayerValue();\n    \n\n    return (\n        \n        <div className=\"homepage\">\n            <Sidebar />\n            <Bar\n                data={{\n                    labels: user_playlists?.items?.map((playlist) => (playlist.name)),\n                    datasets: [\n                    {\n                        label: 'Number of tracks gsdfgdf your playlists',\n                        backgroundColor: 'rgba(75,3,1,1)',\n                        borderColor: 'rgba(0,0,0,1)',\n                        borderWidth: 2,\n                        data: user_playlists?.items?.map((playlist) => (playlist.tracks.total))\n                    }\n                    ]\n                }}\n                options={{\n                    title:{\n                    display:true,\n                    text:'Number of tracks in gsfgd playlists',\n                    fontSize: 30\n                    },\n                    legend:{\n                    display:false,\n                    }\n                }}/>\n\n        </div>\n\n    )\n\n}\n\nexport default Analytics\n\n"]},"metadata":{},"sourceType":"module"}