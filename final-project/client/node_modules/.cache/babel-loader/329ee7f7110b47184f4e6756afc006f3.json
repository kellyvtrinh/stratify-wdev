{"ast":null,"code":"var _jsxFileName = \"/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/DataLayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataLayerContext = /*#__PURE__*/createContext(); // preparing data layer\n// children is what the data layer wraps around \n\nexport const DataLayer = _ref => {\n  _s();\n\n  let {\n    initialState,\n    reducer,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DataLayerContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}; // \n\n_s(DataLayer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = DataLayer;\nexport const useDataLayerValue = () => {\n  _s2();\n\n  return useContext(DataLayerContext);\n};\n\n_s2(useDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DataLayer\");","map":{"version":3,"sources":["/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/DataLayer.js"],"names":["React","createContext","useContext","useReducer","DataLayerContext","DataLayer","initialState","reducer","children","useDataLayerValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC,C,CAA0C;AAEjD;;AACA,OAAO,MAAMI,SAAS,GAAG;AAAA;;AAAA,MAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAD;AAAA,sBACrB,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAA5C;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UADqB;AAAA,CAAlB,C,CAOP;;GAPaH,S;;KAAAA,S;AAQb,OAAO,MAAMI,iBAAiB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,gBAAD,CAAhB;AAAA,CAA1B;;IAAMK,iB","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nexport const DataLayerContext = createContext(); // preparing data layer\n\n// children is what the data layer wraps around \nexport const DataLayer = ({ initialState, reducer, children }) => (\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </DataLayerContext.Provider>\n\n)\n\n// \nexport const useDataLayerValue = () => useContext(DataLayerContext);"]},"metadata":{},"sourceType":"module"}