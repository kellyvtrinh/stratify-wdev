{"ast":null,"code":"var _jsxFileName = \"/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Login from './components/Login';\nimport { getTokenFromUrl } from './components/Login';\nimport Homepage from './components/Homepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(null); // execute the function below once\n\n  useEffect(() => {\n    // extract token from URL after user gives permission \n    const hash = getTokenFromUrl();\n    const _token = hash.access_token; // erase the token from the URL to hide the token \n\n    window.location.hash = \"\";\n\n    if (_token) {\n      setToken(_token);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children:\n    /* \n    \n    If the token is successfully extracted from URL, display the homepage. \n    Else, re-direct to login page.\n     */\n    token ? /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      className: \"login-page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"SSLzquenZQzOMzU62DrezfOo2pU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/App.js"],"names":["useState","useEffect","Login","getTokenFromUrl","Homepage","App","token","setToken","hash","_token","access_token","window","location"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC,CAFa,CAIb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,UAAMO,IAAI,GAAGL,eAAe,EAA5B;AACA,UAAMM,MAAM,GAAGD,IAAI,CAACE,YAApB,CAJc,CAKd;;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBJ,IAAhB,GAAuB,EAAvB;;AAEA,QAAIC,MAAJ,EAAY;AACVF,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACD;AACF,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA;AAGI;AACR;AACA;AACA;AACA;AAGQH,IAAAA,KAAK,gBACH,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAbN,mBADF;AAoBD;;GAtCQD,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport Login from './components/Login'\nimport { getTokenFromUrl } from './components/Login'\nimport Homepage from './components/Homepage'\n\nfunction App() {\n\n  const [token, setToken] = useState(null);\n\n  // execute the function below once\n  useEffect(() => { \n\n    // extract token from URL after user gives permission \n    const hash = getTokenFromUrl();\n    const _token = hash.access_token;\n    // erase the token from the URL to hide the token \n    window.location.hash = \"\";\n\n    if (_token) {\n      setToken(_token);\n    }\n  }, [])\n\n  return (\n    <>\n        {\n        \n        /* \n        \n        If the token is successfully extracted from URL, display the homepage. \n        Else, re-direct to login page.\n\n        */\n\n        token ? (\n          <Homepage />\n        ) : (\n          <Login className=\"login-page\"/>\n        )\n        \n        }\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}