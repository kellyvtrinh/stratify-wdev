{"ast":null,"code":"var _jsxFileName = \"/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/components/Analytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport Sidebar from './Sidebar';\nimport { useDataLayerValue } from '../../src/DataLayer';\nimport { Chrono } from \"react-chrono\";\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Chart } from 'react-chartjs-2';\n/*\nHomepage: consists of sidebar, favorite artists, and favorite tracks. \nBody component contains favorite artist and favorite tracks.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Analytics() {\n  _s();\n\n  var _user_playlists$items, _user_playlists$items2;\n\n  const [{\n    user_playlists\n  }, dispatch] = useDataLayerValue(); // cardHeight={50} cardWidth={200} itemWidth={800}\n\n  const top_tracks_timeline = sorted_tracks_by_date.map(track => {\n    var _track$album, _track$album2;\n\n    return {\n      title: track === null || track === void 0 ? void 0 : (_track$album = track.album) === null || _track$album === void 0 ? void 0 : _track$album.release_date,\n      cardTitle: track === null || track === void 0 ? void 0 : track.name,\n      media: {\n        type: \"IMAGE\",\n        source: {\n          url: track === null || track === void 0 ? void 0 : (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : _track$album2.images[0].url\n        }\n      }\n    };\n  });\n  console.log(\"top_tracks_timeline\", top_tracks_timeline);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: user_playlists === null || user_playlists === void 0 ? void 0 : (_user_playlists$items = user_playlists.items) === null || _user_playlists$items === void 0 ? void 0 : _user_playlists$items.map(playlist => playlist.name),\n        datasets: [{\n          label: 'Number of tracks your playlists',\n          backgroundColor: 'rgba(75,33,121,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: user_playlists === null || user_playlists === void 0 ? void 0 : (_user_playlists$items2 = user_playlists.items) === null || _user_playlists$items2 === void 0 ? void 0 : _user_playlists$items2.map(playlist => playlist.tracks.total)\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"1500px\",\n        height: \"2000px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Chrono, {\n        items: top_tracks_timeline,\n        mode: \"HORIZONTAL\",\n        wait: 10000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analytics, \"9coTlLdYYzbFJUmTJGl2raraueI=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Analytics;\nexport default Analytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"sources":["/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/components/Analytics.js"],"names":["React","useState","Bar","Line","Sidebar","useDataLayerValue","Chrono","Chart","ChartJS","Analytics","user_playlists","dispatch","top_tracks_timeline","sorted_tracks_by_date","map","track","title","album","release_date","cardTitle","name","media","type","source","url","images","console","log","labels","items","playlist","datasets","label","backgroundColor","borderColor","borderWidth","data","tracks","total","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SAASC,KAAK,IAAIC,OAAlB,QAAiC,eAAjC;AACA,SAASD,KAAT,QAAiC,iBAAjC;AAEA;AACA;AACA;AACA;;;;AAEA,SAASE,SAAT,GAAqB;AAAA;;AAAA;;AAEjB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAoBC,QAApB,IAAgCN,iBAAiB,EAAvD,CAFiB,CAKjB;;AAEA,QAAMO,mBAAmB,GAAGC,qBAAqB,CAACC,GAAtB,CAA2BC,KAAD;AAAA;;AAAA,WAAY;AAC9DC,MAAAA,KAAK,EAAED,KAAF,aAAEA,KAAF,uCAAEA,KAAK,CAAEE,KAAT,iDAAE,aAAcC,YADyC;AAE1DC,MAAAA,SAAS,EAAEJ,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEK,IAFwC;AAG1DC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,OADH;AAEHC,QAAAA,MAAM,EAAE;AACJC,UAAAA,GAAG,EAAET,KAAF,aAAEA,KAAF,wCAAEA,KAAK,CAAEE,KAAT,kDAAE,cAAcQ,MAAd,CAAqB,CAArB,EAAwBD;AADzB;AAFL;AAHmD,KAAZ;AAAA,GAA1B,CAA5B;AAWAE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCf,mBAAnC;AAGA,sBAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,GAAD;AACI,MAAA,IAAI,EAAE;AACFgB,QAAAA,MAAM,EAAElB,cAAF,aAAEA,cAAF,gDAAEA,cAAc,CAAEmB,KAAlB,0DAAE,sBAAuBf,GAAvB,CAA4BgB,QAAD,IAAeA,QAAQ,CAACV,IAAnD,CADN;AAEFW,QAAAA,QAAQ,EAAE,CACV;AACIC,UAAAA,KAAK,EAAE,iCADX;AAEIC,UAAAA,eAAe,EAAE,mBAFrB;AAGIC,UAAAA,WAAW,EAAE,eAHjB;AAIIC,UAAAA,WAAW,EAAE,CAJjB;AAKIC,UAAAA,IAAI,EAAE1B,cAAF,aAAEA,cAAF,iDAAEA,cAAc,CAAEmB,KAAlB,2DAAE,uBAAuBf,GAAvB,CAA4BgB,QAAD,IAAeA,QAAQ,CAACO,MAAT,CAAgBC,KAA1D;AALV,SADU;AAFR;AADV;AAAA;AAAA;AAAA;AAAA,YAJJ,eAoBR;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAAZ;AAAA,6BACY,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE5B,mBAAf;AAAoC,QAAA,IAAI,EAAC,YAAzC;AAAsD,QAAA,IAAI,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,YApBQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgCH;;GArDQH,S;UAEiCJ,iB;;;KAFjCI,S;AAuDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport {Bar, Line } from 'react-chartjs-2';\nimport Sidebar from './Sidebar'\nimport { useDataLayerValue } from '../../src/DataLayer'\nimport { Chrono } from \"react-chrono\";\n\nimport { Chart as ChartJS } from 'chart.js/auto'\nimport { Chart }            from 'react-chartjs-2'\n\n/*\nHomepage: consists of sidebar, favorite artists, and favorite tracks. \nBody component contains favorite artist and favorite tracks.\n*/\n\nfunction Analytics() {\n\n    const [{ user_playlists}, dispatch] = useDataLayerValue();\n    \n\n    // cardHeight={50} cardWidth={200} itemWidth={800}\n\n    const top_tracks_timeline = sorted_tracks_by_date.map((track) => ({\n        title: track?.album?.release_date, \n            cardTitle: track?.name,\n            media: {\n                type: \"IMAGE\",\n                source: {\n                    url: track?.album?.images[0].url\n                }\n            }\n    }))\n\n    console.log(\"top_tracks_timeline\", top_tracks_timeline)\n\n \n    return (\n        \n        <div className=\"homepage\">\n            <Sidebar />\n            \n\n            <Bar\n                data={{\n                    labels: user_playlists?.items?.map((playlist) => (playlist.name)),\n                    datasets: [\n                    {\n                        label: 'Number of tracks your playlists',\n                        backgroundColor: 'rgba(75,33,121,1)',\n                        borderColor: 'rgba(0,0,0,1)',\n                        borderWidth: 2,\n                        data: user_playlists?.items?.map((playlist) => (playlist.tracks.total)),\n                        \n                    }\n                    ]\n                }}\n            />\n\n<div style={{ width: \"1500px\", height: \"2000px\"}}>\n            <Chrono items={top_tracks_timeline} mode=\"HORIZONTAL\" wait={10000}/>\n        </div>\n\n           \n\n        </div>\n\n    )\n\n}\n\nexport default Analytics\n"]},"metadata":{},"sourceType":"module"}