{"ast":null,"code":"var _jsxFileName = \"/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react'; // import library that wraps around Spotify API so it's easier to interact with the API\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Login from './components/Login';\nimport Homepage from './components/Homepage';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(null); // dispatch is a way for us to access the data in the data layer \n\n  const [{}, dispatch] = useDataLayerValue();\n  /* Function to extract the code from the URL that is given by the Spotify API after user gives permission. */\n\n  const getTokenFromUrl = () => {\n    return window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n  }; // execute the function below once\n\n\n  useEffect(() => {\n    // extract token from URL after user gives permission \n    const hash = getTokenFromUrl();\n    const _token = hash.access_token; // erase the token from the URL to hide the token \n\n    window.location.hash = \"\";\n\n    if (_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token); // gives token to the Spotify API wrapper\n\n      spotify.getMe() // return the authenticated user\n      .then(user => {\n        console.log(user);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children:\n    /* \n    \n    If the token is successfully extracted from URL, display the homepage. \n    Else, re-direct to login page.\n     */\n    token ? /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"rHSilyz2dXFq3YpMxCMNQc/fVPk=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/App.js"],"names":["useState","useEffect","SpotifyWebApi","Login","Homepage","useDataLayerValue","spotify","App","token","setToken","dispatch","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","user","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,SAASK,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC,CAFa,CAGb;;AACA,QAAM,CAAC,EAAD,EAAKU,QAAL,IAAkBL,iBAAiB,EAAzC;AAEA;;AACA,QAAMM,eAAe,GAAG,MAAM;AAC5B,WAAOC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CACFC,SADE,CACQ,CADR,EAEFC,KAFE,CAEI,GAFJ,EAGFC,MAHE,CAGK,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC5B,UAAIA,IAAJ,EAAU;AACN,YAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,QAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACH;;AACD,aAAOF,OAAP;AACH,KATE,EASA,EATA,CAAP;AAUD,GAXD,CAPa,CAoBb;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,UAAMa,IAAI,GAAGH,eAAe,EAA5B;AACA,UAAMW,MAAM,GAAGR,IAAI,CAACS,YAApB,CAJc,CAKd;;AACAX,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,EAAvB;;AAEA,QAAIQ,MAAJ,EAAY;AACVb,MAAAA,QAAQ,CAACa,MAAD,CAAR;AACAhB,MAAAA,OAAO,CAACkB,cAAR,CAAuBF,MAAvB,EAFU,CAEsB;;AAEhChB,MAAAA,OAAO,CAACmB,KAAR,GAAgB;AAAhB,OACCC,IADD,CACOC,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAHD;AAKD;AACF,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA;AAGI;AACR;AACA;AACA;AACA;AAGQnB,IAAAA,KAAK,gBACH,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAbN,mBADF;AAoBD;;GA7DQD,G;UAIiBF,iB;;;KAJjBE,G;AA+DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\n// import library that wraps around Spotify API so it's easier to interact with the API\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Login from './components/Login';\nimport Homepage from './components/Homepage';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\n  const [token, setToken] = useState(null);\n  // dispatch is a way for us to access the data in the data layer \n  const [{}, dispatch ] = useDataLayerValue();\n\n  /* Function to extract the code from the URL that is given by the Spotify API after user gives permission. */\n  const getTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split('&')\n        .reduce(function(initial, item) {\n            if (item) {\n                var parts = item.split('=');\n                initial[parts[0]] = decodeURIComponent(parts[1]);\n            }\n            return initial;\n        }, {});\n  }\n\n  // execute the function below once\n  useEffect(() => { \n\n    // extract token from URL after user gives permission \n    const hash = getTokenFromUrl();\n    const _token = hash.access_token;\n    // erase the token from the URL to hide the token \n    window.location.hash = \"\";\n\n    if (_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token); // gives token to the Spotify API wrapper\n      \n      spotify.getMe() // return the authenticated user\n      .then((user) => {\n        console.log(user)\n      })  \n\n    }\n  }, [])\n\n  return (\n    <>\n        {\n        \n        /* \n        \n        If the token is successfully extracted from URL, display the homepage. \n        Else, re-direct to login page.\n\n        */\n\n        token ? (\n          <Homepage />\n        ) : (\n          <Login />\n        )\n        \n        }\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}