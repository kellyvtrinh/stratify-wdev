{"ast":null,"code":"var _jsxFileName = \"/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/components/Analytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport Sidebar from './Sidebar';\nimport { useDataLayerValue } from '../../src/DataLayer';\nimport { Chrono } from \"react-chrono\";\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Chart } from 'react-chartjs-2';\n/*\nHomepage: consists of sidebar, favorite artists, and favorite tracks. \nBody component contains favorite artist and favorite tracks.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Analytics() {\n  _s();\n\n  var _top_track$items, _user_playlists$items, _user_playlists$items2;\n\n  // access user playlist from the data layer\n  const [{\n    user_playlists,\n    top_track\n  }, dispatch] = useDataLayerValue(); // a timeline of the user's top tracks\n\n  const num_tracks = top_track === null || top_track === void 0 ? void 0 : top_track.items.length;\n  var sorted_track_dates = top_track === null || top_track === void 0 ? void 0 : (_top_track$items = top_track.items) === null || _top_track$items === void 0 ? void 0 : _top_track$items.map(track => track.album.release_date).sort((a, b) => {\n    var aComps = a.split(\"-\");\n    var bComps = b.split(\"-\");\n    var aDate = new Date(aComps[0], aComps[1], aComps[2]);\n    var bDate = new Date(bComps[0], bComps[1], bComps[2]);\n    return aDate.getTime() - bDate.getTime();\n  });\n  var sorted_tracks_by_date = new Array(num_tracks);\n\n  for (let i = 0; i < num_tracks; i++) {\n    var curr_track = top_track === null || top_track === void 0 ? void 0 : top_track.items[i];\n    var curr_track_date = curr_track.album.release_date;\n    var idx = sorted_track_dates.indexOf(curr_track_date);\n    sorted_tracks_by_date[idx] = curr_track;\n  } // var top_tracks_timeline = new Array(num_tracks);\n\n\n  const top_tracks_timeline = sorted_tracks_by_date.map(track => {\n    var _track$album, _track$album2;\n\n    return {\n      title: track === null || track === void 0 ? void 0 : (_track$album = track.album) === null || _track$album === void 0 ? void 0 : _track$album.release_date,\n      cardTitle: track === null || track === void 0 ? void 0 : track.name,\n      media: {\n        type: \"IMAGE\",\n        source: {\n          url: track === null || track === void 0 ? void 0 : (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : _track$album2.images[0].url\n        }\n      }\n    };\n  });\n  const [timeline_items, setTimeline_Items] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeline_Items(top_tracks_timeline);\n    }, 100000);\n    console.log(\"top_tracks_timeline\", top_tracks_timeline);\n  }, []); // cardHeight={50} cardWidth={200} itemWidth={800}\n\n  console.log(\"top_tracks_timeline\", top_tracks_timeline);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: user_playlists === null || user_playlists === void 0 ? void 0 : (_user_playlists$items = user_playlists.items) === null || _user_playlists$items === void 0 ? void 0 : _user_playlists$items.map(playlist => playlist.name),\n        datasets: [{\n          label: 'Number of tracks your playlists',\n          backgroundColor: 'rgba(75,33,121,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: user_playlists === null || user_playlists === void 0 ? void 0 : (_user_playlists$items2 = user_playlists.items) === null || _user_playlists$items2 === void 0 ? void 0 : _user_playlists$items2.map(playlist => playlist.tracks.total)\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"1500px\",\n        height: \"2000px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Chrono, {\n        items: top_tracks_timeline,\n        mode: \"HORIZONTAL\",\n        wait: 10000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analytics, \"dS9m1wdO8Vv436UaSb/BfLPZXlU=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Analytics;\nexport default Analytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"sources":["/Users/kellytrinh/Desktop/wdev-final-project/final-project/client/src/components/Analytics.js"],"names":["React","useState","useEffect","Bar","Line","Sidebar","useDataLayerValue","Chrono","Chart","ChartJS","Analytics","user_playlists","top_track","dispatch","num_tracks","items","length","sorted_track_dates","map","track","album","release_date","sort","a","b","aComps","split","bComps","aDate","Date","bDate","getTime","sorted_tracks_by_date","Array","i","curr_track","curr_track_date","idx","indexOf","top_tracks_timeline","title","cardTitle","name","media","type","source","url","images","timeline_items","setTimeline_Items","setTimeout","console","log","labels","playlist","datasets","label","backgroundColor","borderColor","borderWidth","data","tracks","total","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Bar, Line } from 'react-chartjs-2';\nimport Sidebar from './Sidebar'\nimport { useDataLayerValue } from '../../src/DataLayer'\nimport { Chrono } from \"react-chrono\";\n\nimport { Chart as ChartJS } from 'chart.js/auto'\nimport { Chart }            from 'react-chartjs-2'\n\n/*\nHomepage: consists of sidebar, favorite artists, and favorite tracks. \nBody component contains favorite artist and favorite tracks.\n*/\n\nfunction Analytics() {\n\n    // access user playlist from the data layer\n    const [{ user_playlists, top_track }, dispatch] = useDataLayerValue();\n\n    // a timeline of the user's top tracks\n\n    const num_tracks = top_track?.items.length;\n\n    var sorted_track_dates = top_track?.items?.map((track) => (track.album.release_date)).sort((a,b) => {\n        var aComps = a.split(\"-\");\n        var bComps = b.split(\"-\");\n        var aDate = new Date(aComps[0], aComps[1], aComps[2]);\n        var bDate = new Date(bComps[0], bComps[1], bComps[2]);\n        return aDate.getTime() - bDate.getTime();\n    });\n\n    var sorted_tracks_by_date = new Array(num_tracks);\n\n    for (let i=0; i < num_tracks; i++) {\n        var curr_track = top_track?.items[i]\n        var curr_track_date = curr_track.album.release_date;\n        var idx = sorted_track_dates.indexOf(curr_track_date);\n        sorted_tracks_by_date[idx] = curr_track\n\n    }\n\n\n    // var top_tracks_timeline = new Array(num_tracks);\n\n    const top_tracks_timeline = sorted_tracks_by_date.map((track) => ({\n        title: track?.album?.release_date, \n            cardTitle: track?.name,\n            media: {\n                type: \"IMAGE\",\n                source: {\n                    url: track?.album?.images[0].url\n                }\n            }\n    }))\n\n    const [timeline_items, setTimeline_Items] = useState(null); \n\n    useEffect(() => {\n        setTimeout(() => { \n            setTimeline_Items(top_tracks_timeline)\n        }, 100000); \n        console.log(\"top_tracks_timeline\", top_tracks_timeline)\n    \n    }, []);\n\n    // cardHeight={50} cardWidth={200} itemWidth={800}\n\n    console.log(\"top_tracks_timeline\", top_tracks_timeline)\n\n \n    return (\n        \n        <div className=\"homepage\">\n            <Sidebar />\n            \n\n            <Bar\n                data={{\n                    labels: user_playlists?.items?.map((playlist) => (playlist.name)),\n                    datasets: [\n                    {\n                        label: 'Number of tracks your playlists',\n                        backgroundColor: 'rgba(75,33,121,1)',\n                        borderColor: 'rgba(0,0,0,1)',\n                        borderWidth: 2,\n                        data: user_playlists?.items?.map((playlist) => (playlist.tracks.total)),\n                        \n                    }\n                    ]\n                }}\n            />\n\n<div style={{ width: \"1500px\", height: \"2000px\"}}>\n            <Chrono items={top_tracks_timeline} mode=\"HORIZONTAL\" wait={10000}/>\n        </div>\n\n           \n\n        </div>\n\n    )\n\n}\n\nexport default Analytics\n"]},"metadata":{},"sourceType":"module"}